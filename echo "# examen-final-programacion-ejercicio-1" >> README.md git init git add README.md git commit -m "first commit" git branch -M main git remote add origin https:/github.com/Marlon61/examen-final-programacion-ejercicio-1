#include <iostream>
#include <stdlib.h>

using namespace std;

/* run this program using the console pauser or add your own getch, system("pause") or input loop */

struct Pila{
		int max;
		int tamano;
		int*array;
};

		//en esta parte vamos a crear y asignarle un tamano a la pila, también crearemos el array donde vamos a almacenar todas las calificaciones
struct Pila* crearPila(int tamano){
	
	struct Pila* pila = (struct Pila*)malloc(sizeof(struct Pila)); //creamos un bloque de memoria
	pila-> tamano = tamano; //le damos un tamano a la pila
	pila-> max = -1; //
	pila-> array = (int*)malloc(pila-> tamano *sizeof(int)); //procedemos a crear el arreglo para almacenar los datos 
	return pila;
}

		// validamos si la pila esta llena 
int estaLlena(struct Pila* pila){
	return pila-> max == pila-> tamano -1;
}
	
		//Validamos si la pila esta vacia 
int estaVacia (struct Pila* pila){
	return pila-> max == -1;
	}

		//agregar  elemento a la pila 
void PUSH(struct Pila* pila, int elemento){
	if (estaLlena(pila))
		return;
	pila-> array [++pila-> max] = elemento;
}

		//retirar elemento de la pila 
int POP(struct Pila* pila){
	if (estaVacia(pila))
		return INT_MIN;
	return pila-> array [pila-> max --];
}

		//mostramos cuantos elementos tiene la pila 
int numElementos(struct Pila* pila){
	return pila-> max +1;
}

		//Mostrar la información de la pila 
void imprimir(struct Pila* pila){
	for (int i = 0; i <= pila-> max; i++)
		printf("\t%i\n", pila-> array [i]);	
}

		// Funcion Pricipal 
int main(int argc, char** argv) {
	
	struct Pila* pila;
	
	int op=0;
	int tam;
	int calif;
	
	
	do{
		system("cls");
		cout<<"\n\n\t1.- Establecer tamanio del array "<<endl;
		cout<<"\t2.- Funcion PUSH"<<endl;
		cout<<"\t3.- Funcion POP"<<endl;
		cout<<"\t4.- Mostrar pila"<<endl;
		cout<<"\t5.- Finalizar";
		cout<<"\n\n\tOpcion: ";
		cin>>op;
		
		switch(op){
			case 1: cout<<"\n\tCaptura el tamanio del array: ";
					cin>>tam;
					pila=crearPila(tam); 	//Creamos una pila con 10 espacios
				break;
				
			case 2:	cout<<"\n\tCaptura la calificacion a ingresar: ";
					cin>>calif;
					PUSH(pila, calif);
					break;
			
			case 3:	cout<<"\n\tRetiramos un elemento de la pila";
					POP(pila);
					cout<<"\n\tSe ha retirado un elemento de la pila";
					break;
			
			case 4:	cout<<"\n\tImprimimos los elementos de la pila\n";
					imprimir(pila);
					system("pause");
					break;
			
			case 5:	cout<<"\n\tTermina la ejecucion del programa:";
					break;
			
			default:	cout<<"\n\tOpcion no valida";
					break;

		}
		
	}while(op!=5);
	
	
				//	PUSH(pila, 100);
				//	PUSH(pila, 70);
				//	PUSH(pila, 80);
				//	PUSH(pila, 60);
				//	PUSH(pila, 100);
				//	PUSH(pila, 100);
				//	PUSH(pila, 80);
				//	PUSH(pila, 90);
				//	PUSH(pila, 80);
				//	PUSH(pila, 70);
				//		
				//	POP(pila);
				//	POP(pila);
				//	
				//	
				//	
				//	imprimir(pila);
				//	
				//	printf("La pila tiene %i elementos\n",numElementos(pila));
	
  return 0;
}



